{"ast":null,"code":"var _jsxFileName = \"/home/willian/Documentos/Engenharia de Software/santluzia/src/hooks/cliente.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useCallback, useContext } from \"react\";\nimport { getDatabase, ref, set, push, child } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClienteContext = /*#__PURE__*/createContext({});\n\nconst ClienteProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const createCliente = useCallback(async _ref2 => {\n    let {\n      name\n    } = _ref2;\n    const database = getDatabase();\n    const uid = push(child(ref(database), \"posts\")).key;\n    console.log(uid);\n    set(ref(database, \"users\"), {\n      name: name,\n      uid: uid\n    });\n    console.log(\"gravou\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ClienteContext.Provider, {\n    value: {\n      createCliente\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClienteProvider, \"8tvLojoklbRlDqdUN7pOAFnJpz4=\");\n\n_c = ClienteProvider;\n\nfunction useClient() {\n  _s2();\n\n  const context = useContext(ClienteContext);\n\n  if (!context) {\n    throw new Error(\"useClass must be used within an AuthProvider\");\n  }\n\n  return context;\n}\n\n_s2(useClient, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { ClienteProvider, useClient };\n\nvar _c;\n\n$RefreshReg$(_c, \"ClienteProvider\");","map":{"version":3,"sources":["/home/willian/Documentos/Engenharia de Software/santluzia/src/hooks/cliente.tsx"],"names":["createContext","useCallback","useContext","getDatabase","ref","set","push","child","ClienteContext","ClienteProvider","children","createCliente","name","database","uid","key","console","log","useClient","context","Error"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,KAAtC,QAAmD,mBAAnD;;AASA,MAAMC,cAAc,gBAAGR,aAAa,CAClC,EADkC,CAApC;;AAIA,MAAMS,eAAyB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClD,QAAMC,aAAa,GAAGV,WAAW,CAAC,eAAoB;AAAA,QAAb;AAAEW,MAAAA;AAAF,KAAa;AACpD,UAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,UAAMW,GAAG,GAAGR,IAAI,CAACC,KAAK,CAACH,GAAG,CAACS,QAAD,CAAJ,EAAgB,OAAhB,CAAN,CAAJ,CAAoCE,GAAhD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAT,IAAAA,GAAG,CAACD,GAAG,CAACS,QAAD,EAAW,OAAX,CAAJ,EAAyB;AAC1BD,MAAAA,IAAI,EAAEA,IADoB;AAE1BE,MAAAA,GAAG,EAAEA;AAFqB,KAAzB,CAAH;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GATgC,EAS9B,EAT8B,CAAjC;AAWA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA;AADK,KADT;AAAA,cAKGD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArBD;;GAAMD,e;;KAAAA,e;;AAuBN,SAASS,SAAT,GAAyC;AAAA;;AACvC,QAAMC,OAAO,GAAGjB,UAAU,CAACM,cAAD,CAA1B;;AAEA,MAAI,CAACW,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;IAPQD,S;;AAQT,SAAST,eAAT,EAA0BS,SAA1B","sourcesContent":["import { createContext, useCallback, useContext } from \"react\";\nimport { getDatabase, ref, set, push, child } from \"firebase/database\";\n\ninterface ClienteProps {\n  name?: string;\n}\n\ninterface ClienteContextData {\n  createCliente(clienteData: ClienteProps): Promise<void>;\n}\nconst ClienteContext = createContext<ClienteContextData>(\n  {} as ClienteContextData\n);\n\nconst ClienteProvider: React.FC = ({ children }) => {\n  const createCliente = useCallback(async ({ name }) => {\n    const database = getDatabase();\n    const uid = push(child(ref(database), \"posts\")).key;\n    console.log(uid);\n    set(ref(database, \"users\"), {\n      name: name,\n      uid: uid,\n    });\n    console.log(\"gravou\");\n  }, []);\n\n  return (\n    <ClienteContext.Provider\n      value={{\n        createCliente,\n      }}\n    >\n      {children}\n    </ClienteContext.Provider>\n  );\n};\n\nfunction useClient(): ClienteContextData {\n  const context = useContext(ClienteContext);\n\n  if (!context) {\n    throw new Error(\"useClass must be used within an AuthProvider\");\n  }\n  return context;\n}\nexport { ClienteProvider, useClient };\n"]},"metadata":{},"sourceType":"module"}